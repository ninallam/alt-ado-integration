# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'ALT-Test'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Create and run a load test and download results
        subscription="Cloud-Native-Testing-IDC-Test" # add subscription here
        resourceGroup="nikita-rg"
        location="northeurope"
        loadTestResource="myCLIResource"
        testID="nikita-cli-test"

        az account set -s $subscription # ...or use 'az login'
        az configure --defaults group=$resourceGroup

        # Create a resource
        az load create --name $loadTestResource --location $location

        # Create a test
        az load test create --load-test-resource  $loadTestResource --test-id $testID  --display-name "My CLI Load Test" --description "Created using az CLI" --test-plan "C:\Code\AzCLISamples\JMX\DemoPodcast.jmx" --engine-instances 2 --env webapp=https://demo-podcastwebapp.azurewebsites.net/

        # Upload additional files
        az load test file upload --load-test-resource  $loadTestResource --test-id $testID --path C:\\Code\\AzCLISamples\\JMX\\Shows.csv --file-type ADDITIONAL_ARTIFACTS

        az load test file upload --load-test-resource  $loadTestResource --test-id $testID --path C:\\Code\\AzCLISamples\\JMX\\jmeter-plugins-functions-2.2.jar --file-type ADDITIONAL_ARTIFACTS

        # Add an app component
        az load test app-component add --load-test-resource  $loadTestResource --test-id $testID --app-component-id "/subscriptions/7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a/resourceGroups/demo-podcast/providers/Microsoft.Web/sites/demo-podcastwebapp" --app-component-type "Microsoft.Web/sites" --app-component-name "demo-podcastwebapp"

        # Create a server metric for the app component
        az load test server-metric add --load-test-resource $loadTestResource --test-id $testID --metric-id "/subscriptions/7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a/resourceGroups/demo-podcast/providers/Microsoft.Web/sites/demo-podcastwebapp/providers/microsoft.insights/metricdefinitions/Http4xx" --metric-name "Http4xx" --metric-namespace "Microsoft.Web/sites" --app-component-id "/subscriptions/7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a/resourceGroups/demo-podcast/providers/Microsoft.Web/sites/demo-podcastwebapp" --app-component-type "Microsoft.Web/sites" --aggregation "Average"

        # Run the test
        testRunId="run_"`date +"%Y%m%d%_H%M%S"`
        displayName="Run "`date +"%Y/%m/%d_%H:%M:%S"`

        az load test-run create --load-test-resource $loadTestResource --test-id $testID --test-run-id $testRunId --display-name $displayName --description "Test run from CLI"

        # Download results
        #az load test-run download-files --load-test-resource $loadTestResource --test-run-id $testRunId --path "C:\Code\AzCLI samples\Results\testResults.zip" --result --force